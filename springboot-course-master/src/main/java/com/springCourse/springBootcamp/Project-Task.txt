We're going to implement a new microservice that'll handle the upcoming payments from our clients.
this service would be able to branch out to sup-services and thus should be designed in a way that It can be scaled
when needed.

Question 1.1 (+)
    - create an enum called PaymentChannel that holds the payment methods.
        - CREDIT_CARD_AKBANK
        - CREDIT_CARD_GARANTI
        - CREDIT_CARD_YAPI_KREDI
        - CREDIT_CARD_IS_BANKASI
        - CREDIT_ING

Question 1.2 (+)
    - create an enum called "Gender" and add gender types.

Question 1.3 (+)
    - create an enum called "UserCreditStatus" and add necessary information. credit status will determine the trust level
      of given user.
        - FIRST
        - LEVEL_ONE
        - LEVEL_TWO
        - LEVEL_THREE
        - LEVEL_FOUR
        - LEVEL_FIVE
        - REVOKED
        - BANNED
        - LAST

Question 1.4 (+)
    - create dto called "UserDto" with given information. Note that we'll not going to store entity directly in this service.
        - Id (Long)
        - name (String)
        - surname (String)
        - identityNumber (int)
        - mailAddress (String)
        - password (String)
        - age (int)
        - gender (Gender)
        - creditScore (int)
        - UserCreditStatus (UserCreditStatus)

Question 2.1 (+)
    - create an enum called PaymentType
        - FIRST
        - CREDIT
        - BILL
        - CAR_FEE
        - TAX
        - HOUSE_FEE
        - OTHER
        - LAST

    create an enum called PaymentInstallment
        - DIRECT
        - ONE_MONTH
        - THREE_MONTH
        - NINE_MONTH
        - TWELVE_MONTH

Question 2.2 (+)
    - create an entity called "Payment" that holds given information.
    - Id (Long)
    - transactionNumber (Long)
    - paymentType (PaymentType)
    - userDto (UserDto)
    - amount (double)
    - credit (Credit - well implement it later on)
    - paymentInstallment (PaymentInstallment)
    - transactionDate (Date)
    - paymentChannel (PaymentChannel)

Question 3.1 (+)
    - create everything :) service, controller, dao, dto, converter, ect...